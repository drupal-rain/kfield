<?php
/**
 * @file
 * Drupal module main file.
 */

include_once 'kfield.formatter.inc';

// =============================================================================
// Utility for Field Operations

/**
 * Add a field with defaults to an entity bundle.
 */
function kfield_add_field_default($field_type, $entity_type, $bundle, $field_name, $field_label = '') {
  $field_type_info = field_info_field_types($field_type);
  // Field Base
  $base = field_info_field($field_name);
  if (!$base) {
    field_create_field(array(
      'field_name' => $field_name,
      'type' => $field_type,
    ));
  }
  // Field Instance
  $instance = field_info_instance($entity_type, $field_name, $bundle);
  if (!$instance) {
    field_create_instance(array(
      'field_name' => $field_name,
      'entity_type' => $entity_type,
      'bundle' => $bundle,
      'label' => drupal_strlen($field_label) > 0 ? $field_label : ucfirst($field_name),
      'widget' => array(
        'type' => $field_type_info['default_widget'],
      ),
      'display' => array(
        'default' => array(
          'type' => $field_type_info['default_formatter'],
        ),
      ),
    ));
  }
}

// @todo Test.
function kfield_add_field_custom($field_type, $entity_type, $bundle, $field_name, $field_label = '', $field_base = array(), $field_instance = array()) {
  $field_type_info = field_info_field_types($field_type);
  // Field Base
  $base = field_info_field($field_name);
  if (!$base) {
    $base = array(
      'field_name' => $field_name,
      'type' => $field_type,
    );
    $base = drupal_array_merge_deep($base, $field_base);
    field_create_field($base);
  }
  else {
    kfield_mod_field_base($field_name, $field_base);
  }
  // Field Instance
  $instance = field_info_instance($entity_type, $field_name, $bundle);
  if (!$instance) {
    $instance = array(
      'field_name' => $field_name,
      'entity_type' => $entity_type,
      'bundle' => $bundle,
      'label' => drupal_strlen($field_label) > 0 ? $field_label : ucfirst($field_name),
      'widget' => array(
        'type' => $field_type_info['default_widget'],
      ),
      'display' => array(
        'default' => array(
          'type' => $field_type_info['default_formatter'],
        ),
      ),
    );
    $instance = drupal_array_merge_deep($instance, $field_instance);
    field_create_instance($instance);
  }
  else {
    kfield_mod_field_instance($entity_type, $bundle, $field_name, $field_instance);
  }
}


/**
 * Update a field base.
 */
function kfield_mod_field_base($field_name, array $field_base) {
  $base = field_info_field($field_name);
  $base = drupal_array_merge_deep($base, $field_base);
  field_update_field($base);
}

/**
 * Update a field instance.
 */
function kfield_mod_field_instance($entity_type, $bundle, $field_name, array $field_instance) {
  $instance = field_info_instance($entity_type, $field_name, $bundle);
  $instance = drupal_array_merge_deep($instance, $field_instance);
  field_update_instance($instance);
}

// @todo
function kfield_mod_field_extra() {

}

// =============================================================================
// Utility, Helper

/**
 * Load taxonomy term(s) by name in specific vocabulary.
 */
function kfield_taxonomy_term_entity_query($vocab, $term) {
  if (is_string($vocab)) {
    $vocab = taxonomy_vocabulary_machine_name_load($vocab);
  }
  else if (is_numeric($vocab)) {
    $vocab = taxonomy_vocabulary_load($vocab);
  }

  $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', 'taxonomy_term')
    ->propertyCondition('vid', $vocab->vid)
    ->propertyCondition('name', $term);
  $result = $query->execute();
  $terms = array();
  if (!empty($result['taxonomy_term'])) {
    $ids = array_keys($result['taxonomy_term']);
    $terms = entity_load('taxonomy_term', $ids);
  }

  return $terms;
}

// =============================================================================
// @deprecating

function kfield_add_field_body($entity_type, $bundle, $label = 'Body') {
  $field_name = 'field_body';
  $field = field_info_field($field_name);
  $instance = field_info_instance($entity_type, $field_name, $bundle);
  if (empty($field)) {
    $field = array(
      'field_name' => $field_name,
      'type' => 'text_with_summary',
      'entity_types' => array($entity_type),
      'settings' => array(
        'uri_scheme' => variable_get('file_default_scheme', 'public'),
        'default_image' => 0,
      ),
    );
    $field = field_create_field($field);
  }
  if (empty($instance)) {
    $instance = array(
      'field_name' => $field_name,
      'entity_type' => $entity_type,
      'bundle' => $bundle,
      'label' => $label,
      'widget' => array('type' => 'text_textarea_with_summary'),
      'settings' => array('display_summary' => TRUE),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'text_default',
        ),
        'teaser' => array(
          'label' => 'hidden',
          'type' => 'text_summary_or_trimmed',
        ),
      ),
    );
    $instance = field_create_instance($instance);
  }

  return $instance;
}

function kfield_add_field_file($entity_type, $bundle, $label = 'File') {
  $field_name = 'field_file';
  $field = field_info_field($field_name);
  $instance = field_info_instance($entity_type, $field_name, $bundle);
  if (empty($field)) {
    $field = array(
      'field_name' => $field_name,
      'type' => 'file',
      'entity_types' => array($entity_type),
      'cardinality' => -1,
      'settings' => array(
        'display_field' => 1, // On/Off option to display this file.
        'display_default' => 1, // Display this field.
        'uri_scheme' => variable_get('file_default_scheme', 'public'),
      ),
    );
    $field = field_create_field($field);
  }
  if (empty($instance)) {
    $instance = array(
      'field_name' => $field_name,
      'entity_type' => $entity_type,
      'bundle' => $bundle,
      'label' => $label,
      'widget' => array('type' => 'file_generic'),
      'settings' => array(
        'file_extensions' => 'txt',
        'file_directory' => '',
        'max_filesize' => '',
        'description_field' => 0,
      ),
      'display' => array(
        'default' => array(
          'label' => 'above',
          'type' => 'file_default',
        ),
        'teaser' => array(
          'label' => 'above',
          'type' => 'file_default',
        ),
      ),
    );
    $instance = field_create_instance($instance);
  }

  return $instance;
}


function kfield_add_field_image($entity_type, $bundle, $label = 'Image') {
  $field_name = 'field_image';
  $field = field_info_field($field_name);
  $instance = field_info_instance($entity_type, $field_name, $bundle);
  if (empty($field)) {
    $field = array(
      'field_name' => $field_name,
      'type' => 'image',
      'entity_types' => array($entity_type),
    );
    $field = field_create_field($field);
  }
  if (empty($instance)) {
    $instance = array(
      'field_name' => $field_name,
      'entity_type' => $entity_type,
      'bundle' => $bundle,
      'label' => $label,
      'widget' => array('type' => 'image_image'),
      'settings' => array(
        'file_extensions' => 'png gif jpg jpeg',
        'file_directory' => '',
        'max_filesize' => '',
        'alt_field' => 0,
        'title_field' => 0,
        'max_resolution' => '',
        'min_resolution' => '',
        'default_image' => 0,
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'image',
        ),
        'teaser' => array(
          'label' => 'hidden',
          'type' => 'image',
        ),
      ),
    );
    $instance = field_create_instance($instance);
  }

  return $instance;
}
